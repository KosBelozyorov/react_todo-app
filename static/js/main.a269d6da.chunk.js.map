{"version":3,"sources":["components/TodoListItem/TodoListItem.js","constants/proptypes.js","components/TodoList/TodoList.js","components/ItemAddForm/ItemAddForm.js","components/ItemStatusFilter/ItemStatusFilter.js","components/SelectAllDone/SelectAllDone.js","components/TodoCounter/TodoCounter.js","components/RemoveAllDone/RemoveAllDone.js","App.js","index.js"],"names":["TodoListItem","PropTypes","string","isRequired","bool","func","arrayOf","shape","id","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeIsEditing","setState","prevState","isEditing","state","_this$props","props","label","onDeleted","onToggleDone","onSubmitEditedChange","completed","classes","classNames","editing","react_default","a","createElement","className","key","type","checked","concat","onChange","htmlFor","onDoubleClick","onClick","defaultValue","Component","TodoList","_ref","todos","elements","map","item","itemProps","objectWithoutProperties","components_TodoListItem_TodoListItem","assign","ItemAddForm","onLabelChange","e","target","value","replace","onSubmit","preventDefault","onItemAdded","placeholder","ItemStatusFilter","links","name","url","filter","onFilterChange","href","SelectAllDone","onToggleDoneAll","Fragment","TodoCounter","ToDo","done","RemoveAllDone","doneTodos","onDeletedAllDone","length","style","display","App","todoData","JSON","parse","localStorage","getItem","getTodosfromLocalStorage","objectFromLS","toConsumableArray","deleteItem","_ref2","todo","removeAllDone","addItem","text","newItem","createTodoItem","_ref3","toggleProperty","arr","propName","idx","findIndex","el","oldItem","_objectSpread","defineProperty","slice","setItem","stringify","_ref4","items","prevProps","json","uuid","_this$state","visibleItems","doneCount","todoCount","components_ItemAddForm_ItemAddForm","components_SelectAllDone_SelectAllDone","components_TodoList_TodoList","components_TodoCounter_TodoCounter","components_ItemStatusFilter_ItemStatusFilter","components_RemoveAllDone_RemoveAllDone","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a269d6da.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { TodoListItemProps } from '../../constants/proptypes';\n\nclass TodoListItem extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isEditing: false,\n    };\n  }\n\n  changeIsEditing = () => {\n    this.setState(prevState => ({\n      isEditing: !prevState.isEditing,\n    }));\n  }\n\n  render() {\n    const { isEditing } = this.state;\n\n    const {\n      id,\n      label,\n      onDeleted,\n      onToggleDone,\n      onSubmitEditedChange,\n      completed,\n    } = this.props;\n\n    const classes = classNames({\n      completed,\n      editing: isEditing,\n    });\n\n    return (\n      <li className={classes} key={id}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            id={`todo-${id}`}\n            onChange={onToggleDone}\n          />\n          {!isEditing && (\n            <label\n              htmlFor={`todo-${id}`}\n              onDoubleClick={this.changeIsEditing}\n            >\n              {label}\n            </label>\n          )}\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={onDeleted}\n          />\n        </div>\n        {isEditing && (\n          <form onSubmitEditedChange={onSubmitEditedChange}>\n            <input\n              className=\"edit\"\n              type=\"text\"\n              defaultValue={label}\n            />\n          </form>\n\n        )}\n      </li>\n    );\n  }\n}\n\nTodoListItem.propTypes = TodoListItemProps;\n\nexport default TodoListItem;\n","import PropTypes from 'prop-types';\n\nexport const TodoListItemProps = {\n  label: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  onSubmitEditedChange: PropTypes.func.isRequired,\n};\n\nexport const TodoListProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  onSubmitEditedChange: PropTypes.func,\n};\n","import React from 'react';\nimport TodoListItem from '../TodoListItem/TodoListItem';\nimport { TodoListProps } from '../../constants/proptypes';\n\nconst TodoList = ({\n  todos,\n  onDeleted,\n  onToggleDone,\n  onSubmitEditedChange,\n}) => {\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <TodoListItem\n        id={id}\n        key={id}\n        {...itemProps}\n        onDeleted={() => onDeleted(id)}\n        onToggleDone={() => onToggleDone(id)}\n        onSubmitEditedChange={() => onSubmitEditedChange(id, item.label)}\n      />\n    );\n  });\n\n  return (\n    <ul className=\"todo-list\">\n      {elements}\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import React, { Component } from 'react';\n\nclass ItemAddForm extends Component {\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value.replace(/^\\s+/, ''),\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"item-add-form d-flex\"\n        onSubmit={this.onSubmit}\n      >\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          onChange={this.onLabelChange}\n          placeholder=\"What needs to be done\"\n          value={this.state.label}\n        />\n      </form>\n    );\n  }\n}\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\n\nclass ItemStatusFilter extends Component {\n  links = [\n    { name: 'all', label: 'All', url: '#/' },\n    { name: 'active', label: 'Active', url: '#/active' },\n    { name: 'completed', label: 'Complete', url: '#/completed' },\n  ];\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n\n    const links = this.links.map(({ name, label, url }) => {\n      const isActive = filter === name;\n      const classNames = isActive ? 'selected' : '';\n\n      return (\n        <a\n          href={url}\n          className={classNames}\n          key={name}\n          onClick={() => onFilterChange(name)}\n        >\n          {label}\n        </a>\n      );\n    });\n\n    return (\n      <ul className=\"filters\">\n        <li>\n          {links}\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default ItemStatusFilter;\n","import React from 'react';\n\nconst SelectAllDone = ({ todos, onToggleDoneAll }) => (\n  <>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label\n      htmlFor=\"toggle-all\"\n      onClick={() => onToggleDoneAll(todos)}\n    >\n      Mark all as complete\n    </label>\n  </>\n);\n\nexport default SelectAllDone;\n","import React from 'react';\n\nconst TodoCounter = ({ ToDo, done }) => (\n  <span className=\"todo-count\">\n    {`${ToDo} items left, ${done} completed`}\n  </span>\n);\n\nexport default TodoCounter;\n","import React from 'react';\n\nconst RemoveAllDone = ({ doneTodos, onDeletedAllDone }) => (\n  <>\n    {doneTodos.length > 0 && (\n      <button\n        onClick={() => onDeletedAllDone(doneTodos)}\n        name=\"Clear completed\"\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n      >\n        Clear completed\n      </button>\n    )}\n  </>\n);\n\nexport default RemoveAllDone;\n","import React, { Component } from 'react';\nimport uuid from 'uuidv4';\nimport TodoList from './components/TodoList/TodoList';\nimport ItemAddForm from './components/ItemAddForm/ItemAddForm';\nimport ItemStatusFilter from './components/ItemStatusFilter/ItemStatusFilter';\nimport SelectAllDone from './components/SelectAllDone/SelectAllDone';\nimport TodoCounter from './components/TodoCounter/TodoCounter';\nimport RemoveAllDone from './components/RemoveAllDone/RemoveAllDone';\n\nclass App extends Component {\n  state = {\n    todoData: JSON.parse(localStorage.getItem('todoData')) || [],\n    filter: 'all',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todoData.length !== this.state.todoData.length) {\n      const json = JSON.stringify(this.state.todoData);\n\n      localStorage.setItem('todoData', json);\n    }\n  }\n\n  getTodosfromLocalStorage = (objectFromLS) => {\n    this.setState(({ todoData }) => ({\n      todoData: [...todoData, ...objectFromLS],\n    }));\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => ({\n      todoData: todoData.filter(todo => todo.id !== id),\n    }));\n  };\n\n  removeAllDone = (doneTodos) => {\n    doneTodos.map(todo => this.deleteItem(todo.id));\n  };\n\n  addItem = (text) => {\n    if (text === '' || text === ' ') {\n      return;\n    }\n\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArray = [...todoData, newItem];\n\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  toggleProperty = (arr, id, propName) => {\n    const idx = arr.findIndex(el => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1),\n    ];\n  };\n\n  onToggleDone = (id) => {\n    localStorage.setItem(\n      'todoData', JSON.stringify(\n        this.toggleProperty(this.state.todoData, id, 'completed')\n      )\n    );\n\n    this.setState(({ todoData }) => ({\n      todoData: this.toggleProperty(todoData, id, 'completed'),\n    }));\n  };\n\n  onToggleDoneAll = (todos) => {\n    todos.map(todo => this.onToggleDone(todo.id));\n    if (todos.length === 0) {\n      this.state.todoData.map(todo => this.onToggleDone(todo.id));\n    }\n  };\n\n  filter = (items, filter) => {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter(item => !item.completed);\n      case 'completed':\n        return items.filter(item => item.completed === true);\n      default:\n        return items;\n    }\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      completed: false,\n      isEditing: false,\n      id: this.id = uuid(),\n    };\n  }\n\n  render() {\n    const { todoData, filter } = this.state;\n\n    const visibleItems = this.filter(todoData, filter);\n    const doneTodos = todoData.filter(el => el.completed);\n\n    const doneCount = doneTodos.length;\n    const todos = todoData.filter(el => !el.completed);\n\n    const todoCount = todos.length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <ItemAddForm onItemAdded={this.addItem} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <SelectAllDone\n            todos={todos}\n            onToggleDoneAll={this.onToggleDoneAll}\n          />\n          <TodoList\n            todos={visibleItems}\n            onDeleted={this.deleteItem}\n            onToggleDone={this.onToggleDone}\n            onSubmitEditedChange={this.onSubmitEditedChange}\n          />\n        </section>\n\n        {todoData.length > 0 && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <TodoCounter ToDo={todoCount} done={doneCount} />\n            <ItemStatusFilter\n              filter={filter}\n              onFilterChange={this.onFilterChange}\n            />\n            <RemoveAllDone\n              doneTodos={doneTodos}\n              onDeletedAllDone={this.removeAllDone}\n            />\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}