{"version":3,"sources":["components/TodoListItem/TodoListItem.js","constants/proptypes.js","components/TodoList/TodoList.js","components/ItemAddForm/ItemAddForm.js","components/ItemStatusFilter/ItemStatusFilter.js","components/SelectAllDone/SelectAllDone.js","components/TodoCounter/TodoCounter.js","components/RemoveAllDone/RemoveAllDone.js","App.js","index.js"],"names":["TodoListItem","PropTypes","string","isRequired","bool","func","arrayOf","shape","id","_ref","label","onDeleted","onToggleDone","completed","classes","classNames","react_default","a","createElement","className","key","type","checked","concat","onChange","htmlFor","onClick","TodoList","todos","elements","map","item","itemProps","Object","objectWithoutProperties","components_TodoListItem_TodoListItem","assign","ItemAddForm","state","onLabelChange","e","_this","setState","target","value","replace","onSubmit","preventDefault","props","onItemAdded","this","placeholder","Component","ItemStatusFilter","links","name","url","_this$props","filter","onFilterChange","href","SelectAllDone","onToggleDoneAll","Fragment","TodoCounter","ToDo","done","RemoveAllDone","doneTodos","onDeletedAllDone","length","style","display","App","todoData","JSON","parse","localStorage","getItem","deleteItem","todo","removeAllDone","addItem","text","newItem","createTodoItem","_ref2","toConsumableArray","toggleProperty","arr","propName","idx","findIndex","el","oldItem","_objectSpread","defineProperty","slice","setItem","stringify","_ref3","items","prevProps","prevState","json","uuid","_this$state","visibleItems","doneCount","todoCount","components_ItemAddForm_ItemAddForm","components_SelectAllDone_SelectAllDone","components_TodoList_TodoList","components_TodoCounter_TodoCounter","components_ItemStatusFilter_ItemStatusFilter","components_RemoveAllDone_RemoveAllDone","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.135f8c5a.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { TodoListItemProps } from '../../constants/proptypes';\n\nconst TodoListItem = ({\n  id,\n  label,\n  onDeleted,\n  onToggleDone,\n  completed,\n}) => {\n  const classes = classNames({\n    completed,\n  });\n\n  return (\n    <li className={classes} key={id}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          id={`todo-${id}`}\n          onChange={onToggleDone}\n        />\n        <label\n          htmlFor={`todo-${id}`}\n        >\n          {label}\n        </label>\n\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={onDeleted}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoListItem.propTypes = TodoListItemProps;\n\nexport default TodoListItem;\n","import PropTypes from 'prop-types';\n\nexport const TodoListItemProps = {\n  label: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n};\n\nexport const TodoListProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n};\n\nexport const ItemStatusFilterProps = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport TodoListItem from '../TodoListItem/TodoListItem';\nimport { TodoListProps } from '../../constants/proptypes';\n\nconst TodoList = ({\n  todos,\n  onDeleted,\n  onToggleDone,\n}) => {\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <TodoListItem\n        id={id}\n        key={id}\n        {...itemProps}\n        onDeleted={() => onDeleted(id)}\n        onToggleDone={() => onToggleDone(id)}\n      />\n    );\n  });\n\n  return (\n    <ul className=\"todo-list\">\n      {elements}\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import React, { Component } from 'react';\n\nclass ItemAddForm extends Component {\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value.replace(/^\\s+/, ''),\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"item-add-form d-flex\"\n        onSubmit={this.onSubmit}\n      >\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          onChange={this.onLabelChange}\n          placeholder=\"What needs to be done\"\n          value={this.state.label}\n        />\n      </form>\n    );\n  }\n}\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\nimport { ItemStatusFilterProps } from '../../constants/proptypes';\n\nclass ItemStatusFilter extends Component {\n  links = [\n    { name: 'all', label: 'All', url: '#/' },\n    { name: 'active', label: 'Active', url: '#/active' },\n    { name: 'completed', label: 'Complete', url: '#/completed' },\n  ];\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n\n    const links = this.links.map(({ name, label, url }) => {\n      const isActive = filter === name;\n      const classNames = isActive ? 'selected' : '';\n\n      return (\n        <a\n          href={url}\n          className={classNames}\n          key={name}\n          onClick={() => onFilterChange(name)}\n        >\n          {label}\n        </a>\n      );\n    });\n\n    return (\n      <ul className=\"filters\">\n        <li>\n          {links}\n        </li>\n      </ul>\n    );\n  }\n}\n\nItemStatusFilter.propTypes = ItemStatusFilterProps;\n\nexport default ItemStatusFilter;\n","import React from 'react';\n\nconst SelectAllDone = ({ todos, onToggleDoneAll }) => (\n  <>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label\n      htmlFor=\"toggle-all\"\n      onClick={() => onToggleDoneAll(todos)}\n    >\n      Mark all as complete\n    </label>\n  </>\n);\n\nexport default SelectAllDone;\n","import React from 'react';\n\nconst TodoCounter = ({ ToDo, done }) => (\n  <span className=\"todo-count\">\n    {`${ToDo} items left, ${done} completed`}\n  </span>\n);\n\nexport default TodoCounter;\n","import React from 'react';\n\nconst RemoveAllDone = ({ doneTodos, onDeletedAllDone }) => (\n  <>\n    {doneTodos.length > 0 && (\n      <button\n        onClick={() => onDeletedAllDone(doneTodos)}\n        name=\"Clear completed\"\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n      >\n        Clear completed\n      </button>\n    )}\n  </>\n);\n\nexport default RemoveAllDone;\n","import React, { Component } from 'react';\nimport uuid from 'uuidv4';\nimport TodoList from './components/TodoList/TodoList';\nimport ItemAddForm from './components/ItemAddForm/ItemAddForm';\nimport ItemStatusFilter from './components/ItemStatusFilter/ItemStatusFilter';\nimport SelectAllDone from './components/SelectAllDone/SelectAllDone';\nimport TodoCounter from './components/TodoCounter/TodoCounter';\nimport RemoveAllDone from './components/RemoveAllDone/RemoveAllDone';\n\nclass App extends Component {\n  state = {\n    todoData: JSON.parse(localStorage.getItem('todoData')) || [],\n    filter: 'all',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todoData.length !== this.state.todoData.length) {\n      const json = JSON.stringify(this.state.todoData);\n\n      localStorage.setItem('todoData', json);\n    }\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => ({\n      todoData: todoData.filter(todo => todo.id !== id),\n    }));\n  };\n\n  removeAllDone = (doneTodos) => {\n    doneTodos.map(todo => this.deleteItem(todo.id));\n  };\n\n  addItem = (text) => {\n    if (text === '' || text === ' ') {\n      return;\n    }\n\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArray = [...todoData, newItem];\n\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  toggleProperty = (arr, id, propName) => {\n    const idx = arr.findIndex(el => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1),\n    ];\n  };\n\n  onToggleDone = (id) => {\n    localStorage.setItem(\n      'todoData', JSON.stringify(\n        this.toggleProperty(this.state.todoData, id, 'completed')\n      )\n    );\n\n    this.setState(({ todoData }) => ({\n      todoData: this.toggleProperty(todoData, id, 'completed'),\n    }));\n  };\n\n  onToggleDoneAll = (todos) => {\n    todos.map(todo => this.onToggleDone(todo.id));\n    if (todos.length === 0) {\n      this.state.todoData.map(todo => this.onToggleDone(todo.id));\n    }\n  };\n\n  filter = (items, filter) => {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter(item => !item.completed);\n      case 'completed':\n        return items.filter(item => item.completed === true);\n      default:\n        return items;\n    }\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      completed: false,\n      id: this.id = uuid(),\n    };\n  }\n\n  render() {\n    const { todoData, filter } = this.state;\n\n    const visibleItems = this.filter(todoData, filter);\n    const doneTodos = todoData.filter(el => el.completed);\n\n    const doneCount = doneTodos.length;\n    const todos = todoData.filter(el => !el.completed);\n\n    const todoCount = todos.length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <ItemAddForm onItemAdded={this.addItem} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <SelectAllDone\n            todos={todos}\n            onToggleDoneAll={this.onToggleDoneAll}\n          />\n          <TodoList\n            todos={visibleItems}\n            onDeleted={this.deleteItem}\n            onToggleDone={this.onToggleDone}\n          />\n        </section>\n\n        {todoData.length > 0 && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <TodoCounter ToDo={todoCount} done={doneCount} />\n            <ItemStatusFilter\n              filter={filter}\n              onFilterChange={this.onFilterChange}\n            />\n            <RemoveAllDone\n              doneTodos={doneTodos}\n              onDeletedAllDone={this.removeAllDone}\n            />\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}