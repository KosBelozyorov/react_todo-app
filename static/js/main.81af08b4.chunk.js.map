{"version":3,"sources":["components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/ItemAddForm/ItemAddForm.js","components/ItemStatusFilter/ItemStatusFilter.js","components/SelectAllDone/SelectAllDone.js","components/TodoCounter/TodoCounter.js","components/RemoveAllDone/RemoveAllDone.js","App.js","index.js"],"names":["TodoListenItem","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","completed","_this$props","props","id","label","onDeleted","onToggleDone","console","log","classNames","react_default","a","createElement","className","key","onClick","type","concat","htmlFor","Component","TodoList","_ref","todos","elements","map","item","itemProps","objectWithoutProperties","TodoListItem","assign","ItemAddForm","onLabelChange","e","setState","target","value","onSubmit","preventDefault","onItemAdded","onChange","placeholder","ItemStatusFilter","links","name","url","filter","onFilterChange","href","SelectAllDone","onToggleDoneall","Fragment","TodoCounter","ToDo","done","RemoveAllDone","doneTodos","onDeletedAllDone","length","style","display","App","todoData","deleteItem","idx","findIndex","el","toConsumableArray","slice","removeAllDone","todo","addItem","text","newItem","createTodoItem","_ref2","toggleProperty","arr","propName","oldItem","_objectSpread","defineProperty","_ref3","items","_this$state","visibleItems","doneCount","todoCount","components_ItemAddForm_ItemAddForm","components_SelectAllDone_SelectAllDone","components_TodoList_TodoList","components_TodoCounter_TodoCounter","components_ItemStatusFilter_ItemStatusFilter","components_RemoveAllDone_RemoveAllDone","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.81af08b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TodoListenItem extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      completed: false,\n    };\n  }\n\n  render() {\n    const {\n      id,\n      label,\n      onDeleted,\n      onToggleDone,\n      completed\n    } = this.props;\n\n    console.log('props', this.props);\n    console.log('props', this.state);\n\n    const classNames = completed ? 'completed' : '';\n\n    return (\n      <li className={classNames} key={id} onClick={onToggleDone}>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" id={`todo-${id}`} />\n          <label htmlFor={`todo-${id}`}>{label}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={onDeleted}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default TodoListenItem;\n","import React from 'react';\nimport TodoListItem from '../TodoListItem/TodoListItem';\n// import PropTypes from 'prop-types';\n\nconst TodoList = ({\n  todos,\n  onDeleted,\n  onToggleDone,\n}) => {\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <TodoListItem\n        id={id}\n        key={id}\n        {...itemProps}\n        onDeleted={() => onDeleted(id)}\n        onToggleDone={() => onToggleDone(id)}\n      />\n    );\n  });\n\n  return (\n    <ul className=\"todo-list\">\n      {elements}\n    </ul>\n  );\n};\n\n// TodoList.propTypes = {};\n\nexport default TodoList;\n","import React, { Component } from 'react';\n\nclass ItemAddForm extends Component {\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"item-add-form d-flex\"\n        onSubmit={this.onSubmit}\n      >\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          onChange={this.onLabelChange}\n          placeholder=\"What needs to be done\"\n          value={this.state.label}\n        />\n      </form>\n    );\n  }\n}\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass ItemStatusFilter extends Component {\n  links = [\n    { name: 'all', label: 'All', url: '#/' },\n    { name: 'active', label: 'Active', url: '#/active' },\n    { name: 'completed', label: 'Complete', url: '#/completed' },\n  ];\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n\n    const links = this.links.map(({ name, label, url }) => {\n      const isActive = filter === name;\n      const classNames = isActive ? 'selected' : '';\n\n      return (\n        <a\n          href={url}\n          className={classNames}\n          key={name}\n          onClick={() => onFilterChange(name)}\n        >\n          {label}\n        </a>\n      );\n    });\n\n    return (\n      <ul className=\"filters\">\n        <li>\n          {links}\n        </li>\n      </ul>\n    );\n  }\n}\n\n// ItemStatusFilter.propTypes = {};\n\nexport default ItemStatusFilter;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst SelectAllDone = ({ todos, onToggleDoneall }) => (\n  <>\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label\n      htmlFor=\"toggle-all\"\n      onClick={() => onToggleDoneall(todos)}\n    >\n      Mark all as complete\n    </label>\n  </>\n);\n\n// SelectAllDone.propTypes = {};\n\nexport default SelectAllDone;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst TodoCounter = ({ ToDo, done }) => (\n  <span className=\"todo-count\">\n    {`${ToDo} items left, ${done} completed`}\n  </span>\n);\n\n// TodoCounter.propTypes = {};\n\nexport default TodoCounter;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst RemoveAllDone = ({ doneTodos, onDeletedAllDone }) => {\n  console.log('remove props:', doneTodos.length);\n  console.log('onDeletedAllDone:', onDeletedAllDone);\n\n  return (\n    <>\n      {doneTodos.length > 0 && (\n        <button\n          onClick={() => onDeletedAllDone(doneTodos)}\n          name=\"Clear completed\"\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: 'block' }}\n        >\n          Clear completed\n        </button>\n      )}\n    </>\n  );\n};\n\n// RemoveAllDone.propTypes = {};\n\nexport default RemoveAllDone;\n","import React, { Component } from 'react';\nimport TodoList from './components/TodoList/TodoList';\nimport ItemAddForm from './components/ItemAddForm/ItemAddForm';\nimport ItemStatusFilter from './components/ItemStatusFilter/ItemStatusFilter';\nimport SelectAllDone from './components/SelectAllDone/SelectAllDone';\nimport TodoCounter from './components/TodoCounter/TodoCounter';\nimport RemoveAllDone from './components/RemoveAllDone/RemoveAllDone';\n\nclass App extends Component {\n  state = {\n    todoData: [],\n    filter: 'all',\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex(el => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  removeAllDone = (doneTodos) => {\n    doneTodos.map(todo => this.deleteItem(todo.id));\n  };\n\n  addItem = (text) => {\n    if (text === '' || text === ' ') {\n      return;\n    }\n\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArray = [...todoData, newItem];\n\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  toggleProperty = (arr, id, propName) => {\n    const idx = arr.findIndex(el => el.id === id);\n\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1),\n    ];\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => ({\n      todoData: this.toggleProperty(todoData, id, 'completed'),\n    }));\n  };\n\n  onToggleDoneall = (todos) => {\n    todos.map(todo => this.onToggleDone(todo.id));\n  };\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter(item => !item.completed);\n      case 'completed':\n        return items.filter(item => item.completed === true);\n      default:\n        return items;\n    }\n  }\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      completed: false,\n      id: this.state.todoData + 1,\n    };\n  }\n\n  render() {\n    const { todoData, filter } = this.state;\n\n    const visibleItems = this.filter(todoData, filter);\n    const doneTodos = todoData.filter(el => el.completed);\n    console.log('doneTodos:', doneTodos);\n    const doneCount = doneTodos.length;\n    const todos = todoData.filter(el => !el.completed);\n    console.log('todos', todos);\n    const todoCount = todos.length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <ItemAddForm onItemAdded={this.addItem} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <SelectAllDone\n            todos={todos}\n            onToggleDoneall={this.onToggleDoneall}\n          />\n          <TodoList\n            todos={visibleItems}\n            onDeleted={this.deleteItem}\n            onToggleDone={this.onToggleDone}\n          />\n        </section>\n\n        {todoData.length > 0 && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <TodoCounter ToDo={todoCount} done={doneCount} />\n            <ItemStatusFilter\n              filter={filter}\n              onFilterChange={this.onFilterChange}\n            />\n            <RemoveAllDone\n              doneTodos={doneTodos}\n              onDeletedAllDone={this.removeAllDone}\n            />\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}